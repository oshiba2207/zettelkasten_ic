{"version":3,"sources":["components/ModalLaunch.js","components/OwnNavbar.js","components/HashTag.js","components/ModalLaunchEdit.js","components/ModalLaunchHook.js","components/Note.js","components/NoteGrid.js","App.js","index.js"],"names":["ModalLaunch","tags","getNotes","setFilteredItems","pfad","useState","tagList","setTagList","show","setShow","noteName","setNoteName","noteText","setNoteText","tag","setTag","handleClose","React","useEffect","Button","variant","onClick","Modal","onHide","Header","Form","inline","FormControl","type","placeholder","className","value","onChange","e","target","Body","rows","cols","preventDefault","map","tagid","tagname","Footer","fetch","method","headers","body","JSON","stringify","then","response","addAdditionalTag","OwnNavbar","load","setLoad","items","hashtags","searchInput","setSearchInput","showNewTag","setShowNewTag","neuesTag","setNeuesTag","tagFilter","setTagFilter","handleModal2Close","filter","item","notetext","toLowerCase","includes","notename","filterByTag","dropdownFilterHandler","text","substring","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Divider","json","data","console","log","HastTag","hashtag","ModalLaunchEdit","noteid","selectedFile","setSelectedFile","filename","setFilename","validateSize","event","file","files","err","size","toast","error","prompt","action","name","width","FormData","append","axios","post","res","success","catch","ModalLaunchHook","Note","filterByTagNote","noteHashTags","ipfshash","imgSource","relHashtags","hashs","deleteNote","w","alignItems","p","rounded","fontSize","fontWeight","src","loading","alt","style","margin","i","HashTag","linkid","NoteGrid","maxW","centerContent","spacing","App","setItems","setTags","filteredItems","tagsNotes","setTagsNotes","itemsGroupedByNoteID","groupItemsByID","final","indexOf","reloadItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dc7a313.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\n\nfunction ModalLaunch({ tags, setFilteredItems, getNotes, pfad }) {\n  const [tagList, setTagList] = useState(tags);\n  const [show, setShow] = useState(false);\n  const [noteName, setNoteName] = useState(\"\");\n  const [noteText, setNoteText] = useState(\"\");\n  const [tag, setTag] = useState(\"\");\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  React.useEffect(() => {\n    setTagList(tags)\n  },[tags],[tagList])\n\n  const handleSave = (e) => {\n    setNoteName(noteName);\n    setNoteText(noteText);\n    setTag(tag);\n    createNote(noteName, noteText, tag);\n  }\n  function createNote() {\n    fetch(pfad + ':3001/notes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ noteName, noteText, tag }),\n    })\n      .then(response => {\n        getNotes();\n        setShow(false);\n      })\n      .then(\n        setShow(false)\n      )\n  }\n\n\n  const addTag = (e) => {\n    addAdditionalTag(tag)\n  }\n\n  function addAdditionalTag(tag){\n    fetch(pfad + ':3001/addTag', {\n      method: \"POST\",\n      headers:{\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({tag, noteName}),\n    })\n    .then(response => {\n      getNotes();\n    })\n  }\n\n  \n\n\n\n  function noteTextChange(e){\n    e.preventDefault();\n    setNoteText(e.target.value)\n  }\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        New Note\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Note Title\" className=\"mr-sm-2\" value={noteName} onChange={e => setNoteName(e.target.value)}/>\n          </Form>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <textarea rows={10} cols={40} placeholder=\"Note Text\" className=\"mr-sm-2\" value={noteText} onChange={noteTextChange}/>\n          </Form>\n          \n            {/* <TagDropdown tags={tags} value={tag} onChange={e => setTag(e.target.value)}/> */}\n          <select onChange={e => setTag(e.target.value)}>\n            <option key=\"\" value=\"\">Select Tag</option>\n            {tagList.map(tag => (\n              <option key={tag.tagid} value={tag.tagid} >#{tag.tagname}</option>\n            ))}            \n          </select>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSave}>\n            Save Note\n          </Button>\n          <Button variant=\"primary\" onClick={addTag}>\n            Add another tag\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalLaunch;","import React, { useState, useEffect } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport ModalLaunch from './ModalLaunch';\nimport Modal from 'react-bootstrap/Modal';\n/* import { useAuth0 } from \"@auth0/auth0-react\"; */\n\n\nconst OwnNavbar = ({ tags, getNotes, load, setLoad, items, setFilteredItems, hashtags, pfad}) => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [showNewTag, setShowNewTag] = useState(false);\n  const [neuesTag, setNeuesTag] = useState(\"\");\n  const [tagList, setTagList] = useState(tags);\n  const [tagFilter, setTagFilter] = useState(\"\");\n  const handleModal2Close = () => setShowNewTag(false);\n  const handleModal2Show = () => setShowNewTag(true);\n/*   const { user, isAuthenticated } = useAuth0(); */\n\n  const loadHandler = () => {\n    setLoad(!load);\n    console.log(load);\n  }\n\n  useEffect(() => {\n    getNotes();\n  }, []);\n\n  React.useEffect(() => {\n    setTagList(tags)\n  }, [tags], [tagList])\n\n  useEffect(() => {\n    setFilteredItems(items.filter((item)=>item.notetext.toLowerCase().includes(searchInput.toLowerCase()) || item.notename.toLowerCase().includes(searchInput.toLowerCase())))\n   /*  if(!load){\n      setLoad(true)\n    } */\n  },[searchInput]);\n\n  useEffect(() => {\n    setFilteredItems(filterByTag(tagFilter))\n  }, [tagFilter])\n\n  const filterByTag = (tagFilter) => {\n    return hashtags.filter((item) => item.tagname.toLowerCase().includes(tagFilter.toLowerCase()))\n  }\n\n  const dropdownFilterHandler = (filter) => {\n    setTagFilter(filter.target.text.substring(1))\n    if(!load){\n      setLoad(true)\n    }\n  }\n\n  const searchFilterHandler = (e) => {\n    setSearchInput(e.target.value)\n    if (!load) {\n      setLoad(true)\n    }\n  }\n  \n  function newTag() {\n    fetch(pfad + ':3001/newTag', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ neuesTag }),\n    })\n      .then(response => {\n        return response.text()\n      })\n      .then(response => {\n        fetch(pfad + ':3001/tags')\n          .then(response => {\n            return response.json();\n          })\n          .then(data => {\n            setTagList(data)\n          });\n      })\n  }\n\n    return(\n    /*   isAuthenticated && (  */\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">Zettelkasten</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n            <ModalLaunch tags={tags} setFilteredItems={setFilteredItems} getNotes={getNotes} pfad={pfad}/>\n              <NavDropdown title=\"Tags\" id=\"basic-nav-dropdown\">\n              {tagList.map(tag => (\n                <NavDropdown.Item key={tag.tagid} value={tag.tagid} onClick={dropdownFilterHandler}>#{tag.tagname}</NavDropdown.Item>\n               /*  <NavDropdown.Item key={tag.tagid} value={tag.tagid} onClick={e => setTagFilter(tag.tagname)}>#{tag.tagname}</NavDropdown.Item> */\n              ))} \n                    <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\" onClick={handleModal2Show}>New Tag</NavDropdown.Item>\n              <Modal show={showNewTag} onHide={handleModal2Close}>\n                <Modal.Header>\n                  <Form inline>\n                    <FormControl type=\"text\" placeholder=\"new Tag\" value={neuesTag} onChange={e => setNeuesTag(e.target.value)} />\n                  </Form>\n                </Modal.Header>\n                <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={handleModal2Close}>\n                    Close\n                </Button>\n                  <Button variant=\"primary\" onClick={newTag}>\n                    Save new Tag\n                </Button>\n                </Modal.Footer>\n              </Modal>\n              </NavDropdown>\n            <Button onClick={loadHandler}>Show all</Button>\n            </Nav>\n            <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={searchFilterHandler} value={searchInput}/>\n            {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={(e) => setSearchInput(e.target.value)} value={searchInput} /> */}\n            </Form>\n            </Navbar.Collapse>\n        </Navbar>\n    /*   )     */      \n    )\n}\n\nexport default OwnNavbar;","import React, { useState, useEffect } from 'react';\n\nconst HastTag = ({ hashtag}) => {\n    const [tagFilter, setTagFilter] = useState(\"\");\n\n    const handleTagFilter = () => {\n       console.log(hashtag.tagname)\n       setTagFilter(hashtag.tagname)\n    }\n\n    return(\n    <div className=\"hashTag\">\n            <small onClick={handleTagFilter}>#{hashtag.tagname}</small>\n    </div>\n    )\n}\n\nexport default HastTag;\n","import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\n\nfunction ModalLaunchEdit({ tags, setFilteredItems, getNotes, item, pfad }) {\n  const [tagList, setTagList] = useState(tags);\n  const [show, setShow] = useState(false);\n  const [noteName, setNoteName] = useState(item.notename);\n  const [noteText, setNoteText] = useState(item.notetext);\n  const [tag, setTag] = useState(\"\");\n  const [noteid, setNoteid] = useState(item.noteid);\n  const [selectedFile, setSelectedFile] = useState();\n  const [filename, setFilename] = useState(\"\");\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  React.useEffect(() => {\n    setTagList(tags)\n  },[tags],[tagList])\n\n  const handleSave = (e) => {\n    setNoteName(noteName);\n    setNoteText(noteText);\n    setTag(tag);\n    changeNote(noteName, noteText);\n  }\n  function changeNote() {\n    fetch(pfad + ':3001/changeNote', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ noteName, noteText, noteid }),\n    })\n      .then(response => {\n        getNotes();\n      })\n  }\n\n  const addTag = (e) => {\n    addAdditionalTag(tag, noteid);\n  }\n\n  function addAdditionalTag(tag, noteid){\n    //const tagNumber = Number(tag);\n    fetch(pfad + ':3001/addTag', {\n      method: \"POST\",\n      headers:{\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ tag, noteid}),\n    })\n    .then(response => {\n      getNotes();\n    })\n  }\n\n  function newTag(){\n    let neuesTag = prompt(\"Enter new Tag:\");\n    \n    fetch(pfad + ':3001/newTag', {\n      method: \"POST\",\n      headers:{\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({neuesTag}),\n    })\n    .then(response => {\n      return response.text()\n    })\n    .then(response => {\n      fetch(pfad + ':3001/tags')\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          setTagList(data)\n        });\n    })\n  }\n\n  function noteTextChange(e){\n    e.preventDefault();\n    setNoteText(e.target.value)\n  }\n\n  const FileUploadOnChangeHandler = event => {\n    const file = event.target.files[0];\n    setFilename(file.name);\n    console.log(file);\n    if (validateSize(event)) {\n      // if return true allow to setState\n      setSelectedFile(file);\n    }\n  }\n  const fileUploadHandler = () => {\n    const data = new FormData()\n    console.log(selectedFile);\n    data.append('file', selectedFile)\n    data.append('noteid', noteid);\n    console.log(data);\n    axios.post(pfad + \":3001/upload\", data)\n      .then(res => { // then print response status\n        toast.success('upload success')\n      })\n      .then(res => {\n        fetch(pfad + ':3001/uploads/file', {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ filename, noteid }),\n        })\n      })\n      .then(res => {\n        fetch(pfad + ':3001/upload_ipfs/file', {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ filename, noteid }),\n        })\n      })\n      .catch(err => { // then print response status\n        toast.error('upload fail')\n      })\n\n  };\n  const validateSize = (event) => {\n    let file = event.target.files[0];\n    let size = 30000;\n    let err = '';\n    if (file.size > size) {\n      err = file.type + 'is too large, please pick a smaller file\\n';\n      toast.error(err);\n    }\n    return true\n  };\n\n  return (\n    <>\n      <Button size=\"sm\" variant=\"primary\" onClick={handleShow}>\n        Edit\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header>\n          <Form inline>\n            <input type=\"text\" value={noteName} className=\"mr-sm-2\" onChange={e => setNoteName(e.target.value)} />\n          </Form>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <textarea rows={10} cols={35} className=\"mr-sm-2\" value={noteText} onChange={e => setNoteText(e.target.value)} />\n          </Form>\n          \n            {/* <TagDropdown tags={tags} value={tag} onChange={e => setTag(e.target.value)}/> */}\n          <select onChange={e => setTag(e.target.value)} >\n            <option key=\"\" value=\"\">Select Tag</option>\n            {tagList.map(tag => (\n              <option key={tag.tagid} value={tag.tagid} >#{tag.tagname}</option>\n            ))}\n            <option key=\"0\" value=\"0\" onClick={newTag}>Create new tag</option>\n          </select>\n          <form method=\"post\" action=\"#\" id=\"#\">\n            <div className=\"form-group files\">\n              <label>Upload Your File </label>\n              <input type=\"file\" name=\"file\" className=\"form-control\" onChange={FileUploadOnChangeHandler} />\n            </div>\n            <div className=\"col-md-6 pull-right\">\n              <button width=\"100%\" type=\"button\" className=\"btn btn-info\" onClick={fileUploadHandler}>Upload File</button>\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSave}>\n            Save Changes\n          </Button>\n          <Button variant=\"primary\" onClick={addTag}>\n            Add another tag\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalLaunchEdit;","import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\n\nfunction ModalLaunchHook({noteid}) {\n  const [show, setShow] = useState(false);\n  //const [nets,setNets] = useState([]);\n  const [noteid2, setNoteid2] = useState([]);\n  const handleClose = () => {\n    setShow(false);\n  }\n  \n  const handleShow = () => { \n    getNets(noteid);\n    setShow(true);\n    console.log(noteid2)\n  }\n    /* useEffect(() => {\n        getNets(noteid1);\n    }, []);*/\n\n    const getNets = (noteid) => {\n        fetch('http://192.168.1.99:3001/nets', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ noteid }),\n        })\n            .then(response => {\n                //console.log(response)\n                setNoteid2(response)\n            })\n    }\n\n  return (\n    <>\n\n          <small \n            className=\"rounded-circle\" \n            style={{ \n              padding: \"4px\", \n              color: \"black\", \n              backgroundColor: \"white\", \n              position: \"absolute\", \n              right: \"30px\" \n              }} \n              onClick={handleShow}\n              value = {noteid} \n             >\n              {noteid}\n          </small>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header>\n             \n        </Modal.Header>\n        <Modal.Body>\n          \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n      \n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalLaunchHook;","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport HashTag from './HashTag'\n//import Moment from 'moment';\nimport Button from 'react-bootstrap/Button';\nimport ModalLaunchEdit from './ModalLaunchEdit';\nimport ModalLaunchHook from './ModalLaunchHook';\n//import { Container, Col, Row } from 'react-bootstrap';\nimport { Box, HStack, Text } from \"@chakra-ui/core\";\n\nconst Note = ({ item, hashtags, tags, getNotes, setFilteredItems, filterByTagNote, pfad}) => {\n  /*   const formatedDate = Moment(item.notecreated).format('DD-MM-YYYY'); */\n    const [noteid, setNoteid] = useState(item.noteid);\n    const noteHashTags = [...hashtags];\n    //const [imgSource, setImgSource] = useState(pfad + \"/zettelkasten/uploads/\" + item.fileurl);\n    const [imgSource, setImgSource] = useState(\"https://oshiba2207-team-bucket.storage.fleek.co/\" + item.ipfshash);\n    //const [imgSource, setImgSource] = useState(\"http://simian.sytes.net/zettelkasten/files/zettelkasten/uploads/\" + item.fileurl);\n  /*   if (imgSource == 'http://simian.sytes.net/zettelkasten/uploads/null'){\n        setImgSource('http://simian.sytes.net:3001/zettelkasten/uploads/canvas2.png');\n    }  */\n    const relHashtags = noteHashTags.filter(hashs => hashs.noteid === item.noteid);\n    const deleteHandle = (e) => {\n        deleteNote(noteid);\n    }\n\n    const filterByTag = (tagFilter) => {\n        return hashtags.filter((item) => item.tagname.toLowerCase().includes(tagFilter.toLowerCase()))\n    }\n\n    const deleteNote = (noteid) => {\n        \n        fetch(pfad + ':3001/deleteNote/' + noteid, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ noteid }),\n        })\n            .then(response => {\n                getNotes();                \n            })\n    }\n\n    return(\n    <HStack key={item.noteid} w=\"100%\" alignItems=\"flex-start\">\n      <Box bg=\"gray.100\" p={4} rounded=\"md\" w=\"100%\">\n                <Text \n                    fontSize=\"3xl\"\n                    fontWeight=\"extrabold\">{item.notename}</Text>\n        <Text>{item.notetext}</Text>\n                <a href={imgSource}\n                    target=\"_blank\">\n                    <img\n                        src={imgSource}\n                        loading=\"lazy\"\n                        alt=\"\">\n                    </img>\n                </a>\n                <ModalLaunchEdit tags={tags} item={item} getNotes={getNotes} pfad={pfad} />\n                <Button size=\"sm\" style={{ margin: 10 }} variant=\"danger\" onClick={deleteHandle} value={item.noteid}>Del</Button>\n                {relHashtags.map((hashtag, i) => (\n                    <HashTag hashtag={relHashtags[i]} filterByTagNote={filterByTagNote} key={hashtag.linkid} />\n                ))}\n      </Box>\n    </HStack>\n   \n    )\n}\n\nexport default Note;","import React from 'react'\nimport Note from './Note';\n//import { Container, Col, Row } from 'react-bootstrap';\nimport { Container, Flex, Spinner, VStack } from \"@chakra-ui/core\";\n\nconst NoteGrid = ({ items, hashtags, tags, getNotes, setFilteredItems, pfad }) => {\n\n    const filterByTagNote = (tagFilter) => {\n        return hashtags.filter((item) => item.tagname.toLowerCase().includes(tagFilter.toLowerCase()))\n    }\n\n    return(\n       /*  <Container fluid=\"md\">\n            <Row>\n                {items.map(item=>(\n                    <Col lg={6} md={6} xs={12} key={item.noteid} >\n                        <Note item={item} hashtags={hashtags} tags={tags} pfad={pfad} filterByTagNote={filterByTagNote} setFilteredItems={setFilteredItems} getNotes={getNotes}></Note>\n                    </Col>\n            ))}\n            </Row>\n        </Container> */\n        <Container maxW=\"md\" centerContent p={8}>\n        <VStack spacing={8} w=\"100%\">\n          {items.map((item) => (\n              <Note item={item} key={item.noteid} hashtags={hashtags} tags={tags} pfad={pfad} filterByTagNote={filterByTagNote} setFilteredItems={setFilteredItems} getNotes={getNotes}/>\n          ))}\n        </VStack>\n      </Container>\n    )\n}\nexport default NoteGrid\n","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport OwnNavbar from './components/OwnNavbar.js';\nimport './App.css';\nimport NoteGrid from './components/NoteGrid';\n/* import LoginButton from './components/LoginButton';\nimport LogoutButton from './components/LoginButton';\nimport { useAuth0 } from '@auth0/auth0-react'; */\n\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  //const [query, setQuery] = useState('')\n  const [tags, setTags] = useState([]);\n  const [tagList, setTagList] = useState([]);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [tagsNotes, setTagsNotes] = useState([]);\n  //const pfad = \"http://ec2-3-249-53-237.eu-west-1.compute.amazonaws.com/\";\n const pfad = \"https://www.simian.link\";\n const [load, setLoad] = useState(false);\n  //const pfad = \"http://127.0.0.1\" \n/*  const { isLoading } = useAuth0(); */\n \n  \n\n  const getNotes = () => {\n    fetch(pfad + ':3001')\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        setTagsNotes(data);\n        const itemsGroupedByNoteID = groupItemsByID(data, \"noteid\");\n        setFilteredItems(itemsGroupedByNoteID);  \n        setItems(itemsGroupedByNoteID); \n      })\n  } \n\n\n  \n  //Group item-Array\n\n  const groupItemsByID = (data, noteid) => {\n    const unique = data.map(e => e[noteid])\n      .map((e,i,final) => final.indexOf(e) === i && i)\n      .filter((e) => data[e]).map(e=> data[e]);\n    return unique;\n  };\n  useEffect(() => {\n    function getTags() {\n      fetch(pfad + ':3001/tags')\n      //fetch('http://192.198.1.99:3001/tags')\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          setTags(data)\n        });\n    }\n    getTags();\n  }, [tagList]);\n\n  /* if (isLoading) return <div>Loading...</div> */\n\n  return (\n    <div className=\"App\">\n     {/*  <LoginButton /> */}\n     \n      <OwnNavbar pfad={pfad} load={load} setLoad={setLoad} tags={tags} filteredItems={filteredItems} reloadItems={getNotes} items={items} setFilteredItems={setFilteredItems} getNotes={getNotes} hashtags={tagsNotes}/>\n      <div>\n        {/* {(load) ? (  */}\n        <NoteGrid pfad={pfad} className=\"NoteGrid\" getNotes={getNotes} items={filteredItems} setFilteredItems={setFilteredItems} hashtags={tagsNotes} tags={tags}/>\n     {/*    ) : (<h1>nothing to see</h1>\n          )\n        } */}\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider } from \"@chakra-ui/core\";\n/*  import { SpaceClient } from '@fleekhq/space-client';\n\n  // default port exposed by the daemon for client connection is 9998\n  const client = new SpaceClient({\n    url: `http://0.0.0.0:9998`,\n  });*/\n/* import { Auth0Provider } from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID; */\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}